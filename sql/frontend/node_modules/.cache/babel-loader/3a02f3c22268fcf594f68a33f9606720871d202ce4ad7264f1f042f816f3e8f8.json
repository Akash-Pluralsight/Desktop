{"ast":null,"code":"var _jsxFileName = \"/Users/akashs-chetiar/Desktop/sql/frontend/src/Components/Component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CreateSchema from './CreateSchema';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Component() {\n  _s();\n  const [selectedTable, setSelectedTable] = useState('');\n  const [schemas, setSchemas] = useState([]);\n  const [selectedSchema, setSelectedSchema] = useState('');\n  const [tables, setTables] = useState([]);\n  const [displaySchema, setDisplaySchema] = useState(false);\n  const navigate = useNavigate();\n  const handleTableChange = event => {\n    const selectedTable = event.target.value;\n    setSelectedTable(selectedTable);\n    navigate('/query', {\n      state: {\n        schema: selectedSchema,\n        table: selectedTable\n      }\n    });\n  };\n  const handleSchemaChange = async event => {\n    setSelectedSchema(event.target.value);\n    try {\n      const response = await fetch(`http://localhost:5000/api/get_tables/${event.target.value}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch tables');\n      }\n      const data = await response.json();\n      setTables(data.tables);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/get_schemas');\n        if (!response.ok) {\n          throw new Error('Failed to fetch schemas');\n        }\n        const data = await response.json();\n        setSchemas(data.schemas);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleCreateSchema = async () => {\n    setDisplaySchema(true);\n    await fetchData();\n    //navigate('/createschema')\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSchema,\n        onChange: handleSchemaChange,\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), schemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: schema,\n          children: schema\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), tables.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTable,\n        onChange: handleTableChange,\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), tables.map((table, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: table,\n          children: table\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateSchema,\n        className: \"saveBtn\",\n        children: \"Create Schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), displaySchema && /*#__PURE__*/_jsxDEV(CreateSchema, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n}\n_s(Component, \"6z6tb58a2hf3c7FbaF+h9ChmYZE=\", false, function () {\n  return [useNavigate];\n});\n_c = Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","CreateSchema","jsxDEV","_jsxDEV","Fragment","_Fragment","Component","_s","selectedTable","setSelectedTable","schemas","setSchemas","selectedSchema","setSelectedSchema","tables","setTables","displaySchema","setDisplaySchema","navigate","handleTableChange","event","target","value","state","schema","table","handleSchemaChange","response","fetch","ok","Error","data","json","error","console","fetchData","handleCreateSchema","children","onChange","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","length","onClick","_c","$RefreshReg$"],"sources":["/Users/akashs-chetiar/Desktop/sql/frontend/src/Components/Component.jsx"],"sourcesContent":["import React,{useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CreateSchema from './CreateSchema';\nexport default function Component (){\n    const [selectedTable, setSelectedTable] = useState('');\n    const [schemas, setSchemas] = useState([]);\n    const [selectedSchema, setSelectedSchema] = useState('');\n    const [tables, setTables] = useState([]);\n    const [displaySchema, setDisplaySchema] = useState(false);\n    const navigate = useNavigate();\n\n    const handleTableChange = (event) =>{\n      const selectedTable = event.target.value;\n      setSelectedTable(selectedTable);\n      navigate('/query',{state:{schema:selectedSchema,table:selectedTable}});\n    }\n\n    const handleSchemaChange =async (event) => {\n        setSelectedSchema(event.target.value);\n        try {\n            const response = await fetch(`http://localhost:5000/api/get_tables/${event.target.value}`);\n            if (!response.ok) {\n              throw new Error('Failed to fetch tables');\n            }\n      \n            const data = await response.json();\n            setTables(data.tables);\n          } catch (error) {\n            console.error(error);\n          }\n      };\n\n    useEffect(() => {\n        const fetchData = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/get_schemas');\n            if (!response.ok) {\n              throw new Error('Failed to fetch schemas');\n            }\n            const data = await response.json();\n            setSchemas(data.schemas);\n          } catch (error) {\n            console.error(error);\n          }\n        };        \n        fetchData();\n      }, []);\n\n    \n    const handleCreateSchema =async () => {\n      setDisplaySchema(true);\n      await fetchData();\n      //navigate('/createschema')\n    }\n    \n    return (\n        <>            \n            <div >                \n                <select value={selectedSchema} onChange={handleSchemaChange} className='dropdown'>\n                    <option value=\"\">Select a schema</option>\n                    {schemas.map((schema, index) => (\n                    <option key={index} value={schema}>\n                        {schema}\n                    </option>\n                    ))}\n                </select>\n                    {tables.length > 0 && (\n                        <select value={selectedTable} onChange={handleTableChange} className='dropdown'>\n                            <option value=\"\">Select a Table</option>\n                            {tables.map((table, index) => (\n                            <option key={index} value={table}>\n                                {table}\n                            </option>\n                            ))}\n                        </select>\n                    )}\n            </div>\n            <div>\n                \n                <button onClick={handleCreateSchema} className='saveBtn'> \n                    Create Schema\n                </button>\n            </div>\n            {displaySchema && <CreateSchema/>}\n            \n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,iBAAiB,GAAIC,KAAK,IAAI;IAClC,MAAMZ,aAAa,GAAGY,KAAK,CAACC,MAAM,CAACC,KAAK;IACxCb,gBAAgB,CAACD,aAAa,CAAC;IAC/BU,QAAQ,CAAC,QAAQ,EAAC;MAACK,KAAK,EAAC;QAACC,MAAM,EAACZ,cAAc;QAACa,KAAK,EAACjB;MAAa;IAAC,CAAC,CAAC;EACxE,CAAC;EAED,MAAMkB,kBAAkB,GAAE,MAAON,KAAK,IAAK;IACvCP,iBAAiB,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACrC,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCR,KAAK,CAACC,MAAM,CAACC,KAAM,EAAC,CAAC;MAC1F,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCjB,SAAS,CAACgB,IAAI,CAACjB,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACJ,CAAC;EAEHnC,SAAS,CAAC,MAAM;IACZ,MAAMqC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCrB,UAAU,CAACoB,IAAI,CAACrB,OAAO,CAAC;MAC1B,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGR,MAAMC,kBAAkB,GAAE,MAAAA,CAAA,KAAY;IACpCnB,gBAAgB,CAAC,IAAI,CAAC;IACtB,MAAMkB,SAAS,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACIhC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,gBACIlC,OAAA;QAAQmB,KAAK,EAAEV,cAAe;QAAC0B,QAAQ,EAAEZ,kBAAmB;QAACa,SAAS,EAAC,UAAU;QAAAF,QAAA,gBAC7ElC,OAAA;UAAQmB,KAAK,EAAC,EAAE;UAAAe,QAAA,EAAC;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxCjC,OAAO,CAACkC,GAAG,CAAC,CAACpB,MAAM,EAAEqB,KAAK,kBAC3B1C,OAAA;UAAoBmB,KAAK,EAAEE,MAAO;UAAAa,QAAA,EAC7Bb;QAAM,GADEqB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EACJ7B,MAAM,CAACgC,MAAM,GAAG,CAAC,iBACd3C,OAAA;QAAQmB,KAAK,EAAEd,aAAc;QAAC8B,QAAQ,EAAEnB,iBAAkB;QAACoB,SAAS,EAAC,UAAU;QAAAF,QAAA,gBAC3ElC,OAAA;UAAQmB,KAAK,EAAC,EAAE;UAAAe,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvC7B,MAAM,CAAC8B,GAAG,CAAC,CAACnB,KAAK,EAAEoB,KAAK,kBACzB1C,OAAA;UAAoBmB,KAAK,EAAEG,KAAM;UAAAY,QAAA,EAC5BZ;QAAK,GADGoB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNxC,OAAA;MAAAkC,QAAA,eAEIlC,OAAA;QAAQ4C,OAAO,EAAEX,kBAAmB;QAACG,SAAS,EAAC,SAAS;QAAAF,QAAA,EAAC;MAEzD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACL3B,aAAa,iBAAIb,OAAA,CAACF,YAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEnC,CAAC;AAEX;AAACpC,EAAA,CApFuBD,SAAS;EAAA,QAMZN,WAAW;AAAA;AAAAgD,EAAA,GANR1C,SAAS;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}