{"ast":null,"code":"var _jsxFileName = \"/Users/akashs-chetiar/Desktop/sql/frontend/src/CreateSchema.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateSchema() {\n  _s();\n  const [schemaName, setSchemaName] = useState(\"\");\n  const [validationMessage, setValidationMessage] = useState(\"\");\n  const handleSchemaNameChange = event => {\n    setSchemaName(event.target.value);\n  };\n  const handleCreateSchemaBtn = () => {\n    const hasBlankSpaces = /\\s+/.test(schemaName);\n    const hasSpecialCharacters = /[^\\w]/.test(schemaName);\n    if (schemaName !== schemaName.toLowerCase()) {\n      setValidationMessage(\"<p style='color: red;'>Schema name should be in lowercase</p>\");\n    } else if (hasBlankSpaces) {\n      setValidationMessage(\"<p style='color: red;'>Schema name should not contain blank spaces</p>\");\n    } else if (hasSpecialCharacters) {\n      setValidationMessage(\"<p style='color: red;'>Schema name should not contain special characters other than underscore</p>\");\n    } else {\n      setValidationMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter valid Schema Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Schema Name\",\n        value: schemaName,\n        onChange: handleSchemaNameChange,\n        className: \"schemaInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: validationMessage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateSchemaBtn,\n      className: \"createschemabtn\",\n      children: \"Create Schema\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateSchema, \"QL6kgo20llqCC2cqn6stw46PfvA=\");\n_c = CreateSchema;\nvar _c;\n$RefreshReg$(_c, \"CreateSchema\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateSchema","_s","schemaName","setSchemaName","validationMessage","setValidationMessage","handleSchemaNameChange","event","target","value","handleCreateSchemaBtn","hasBlankSpaces","test","hasSpecialCharacters","toLowerCase","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","className","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["/Users/akashs-chetiar/Desktop/sql/frontend/src/CreateSchema.jsx"],"sourcesContent":["import React,{useState} from \"react\";\n\nexport default function CreateSchema (){\n    const [schemaName,setSchemaName] = useState(\"\");\n    const [validationMessage, setValidationMessage] = useState(\"\");\n\n    const handleSchemaNameChange=(event)=>{\n        setSchemaName(event.target.value);\n    }\n    const handleCreateSchemaBtn = () => {\n        const hasBlankSpaces = /\\s+/.test(schemaName);\n        const hasSpecialCharacters = /[^\\w]/.test(schemaName);\n        if(schemaName!==schemaName.toLowerCase()){\n            setValidationMessage(\"<p style='color: red;'>Schema name should be in lowercase</p>\");\n        }\n        else if(hasBlankSpaces){\n            setValidationMessage(\"<p style='color: red;'>Schema name should not contain blank spaces</p>\")\n        }\n        else if (hasSpecialCharacters) {\n            setValidationMessage(\"<p style='color: red;'>Schema name should not contain special characters other than underscore</p>\");\n        }\n        else{\n            setValidationMessage(\"\")\n        }\n    }\n\n    return(\n        <>\n            <h1>Enter valid Schema Name</h1>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter Schema Name\"\n                    value={schemaName}\n                    onChange={handleSchemaNameChange}\n                    className=\"schemaInput\"\n                />\n            </div>\n            <div dangerouslySetInnerHTML={{ __html: validationMessage }} />\n            <button onClick={handleCreateSchemaBtn} className=\"createschemabtn\">\n                Create Schema\n            </button>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMW,sBAAsB,GAAEC,KAAK,IAAG;IAClCJ,aAAa,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EACD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAChC,MAAMC,cAAc,GAAG,KAAK,CAACC,IAAI,CAACV,UAAU,CAAC;IAC7C,MAAMW,oBAAoB,GAAG,OAAO,CAACD,IAAI,CAACV,UAAU,CAAC;IACrD,IAAGA,UAAU,KAAGA,UAAU,CAACY,WAAW,CAAC,CAAC,EAAC;MACrCT,oBAAoB,CAAC,+DAA+D,CAAC;IACzF,CAAC,MACI,IAAGM,cAAc,EAAC;MACnBN,oBAAoB,CAAC,wEAAwE,CAAC;IAClG,CAAC,MACI,IAAIQ,oBAAoB,EAAE;MAC3BR,oBAAoB,CAAC,oGAAoG,CAAC;IAC9H,CAAC,MACG;MACAA,oBAAoB,CAAC,EAAE,CAAC;IAC5B;EACJ,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCtB,OAAA;MAAAkB,QAAA,eACIlB,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BZ,KAAK,EAAEP,UAAW;QAClBoB,QAAQ,EAAEhB,sBAAuB;QACjCiB,SAAS,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtB,OAAA;MAAK2B,uBAAuB,EAAE;QAAEC,MAAM,EAAErB;MAAkB;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DtB,OAAA;MAAQ6B,OAAO,EAAEhB,qBAAsB;MAACa,SAAS,EAAC,iBAAiB;MAAAR,QAAA,EAAC;IAEpE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACX,CAAC;AAEX;AAAClB,EAAA,CA1CuBD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}